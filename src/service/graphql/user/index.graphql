#注册
mutation signUpMutation($account: String!, $password: String!, $uuid: String) {
    signUp(account: $account, password: $password, uuid: $uuid) {
        id
        account
        token
        avatar
        name
        wallet {
            id
            real_name
            pay_account
            pay_info_change_count
            today_withdraw_amount
        }
        profile {
            introduction
            birthday
            age
            total_contributes
        }
        gender
        is_admin
        verified_at
    }
}

#登录
mutation signInMutation($account: String!, $password: String, $code: String) {
    signIn(account: $account, password: $password, code: $code) {
        id
        account
        token
        avatar
        name
        wallet {
            id
            real_name
            pay_account
            pay_info_change_count
            today_withdraw_amount
        }
        profile {
            introduction
            birthday
            age
            total_contributes
        }
        gender
        is_admin
        verified_at
    }
}

#token登录
mutation signToken($token: String) {
    signInWithToken(token: $token) {
        id
        account
        token
        avatar
        name
        wallet {
            id
            real_name
            pay_account
            pay_info_change_count
            today_withdraw_amount
        }
        profile {
            introduction
            birthday
            age
            total_contributes
        }
        gender
    }
}

#重置密码
mutation ResetPasswordMutation($account: String!, $password: String!, $code: String!) {
    resetPassword(account: $account, password: $password, code: $code) {
        id
        account
    }
}

#修改密码
mutation UpdateUserPasswordMutation($old_password: String!, $new_password: String!) {
    updateUserPassword(old_password: $old_password, new_password: $new_password) {
        id
    }
}

#用户个人资料
query UserQuery($id: Int) {
    user(id: $id) {
        id
        account
        name
        wallet {
            id
            real_name
            pay_account
            available_balance
            balance
            pay_info_change_count
            total_withdraw_amount
            platforms {
                alipay
                wechat
            }
            bind_platforms {
                alipay
            }
        }
        profile {
            introduction
            birthday
            age
            total_contributes
            questions_count
            posts_count
        }
        roles
        gender
        avatar
        gold
        ticket
        exp
        next_level_exp
        follow_users_count
        followers_count
        followed_user_status
        level {
            id
            name
            ticket_max
            level
            exp
        }
        week_contributes
        today_contributes
        today_new_questions_count
        today_left_questions_count
        today_withdraw_left
        exchange_rate
        video_duration
        explanation_video_duration
        has_reward_new_user
        is_bind_wechat
        is_admin
        verified_at
        force_alert
        is_bind_dongdezhuan
        dongdezhuanUser {
            id
            name
            account
        }
        dameiUser {
            id
            name
            account
        }
    }
}

#其他用户资料
query UserInfoQuery($id: Int, $limit: Int, $offset: Int, $order: QuestionOrderEnum, $filter: QuestionFilterEnum) {
    user(id: $id) {
        id
        name
        avatar
        gender
        follow_users_count
        followers_count
        followed_user_status
        is_admin
        roles
        profile {
            sub_name
            birthday
            age
            introduction
            questions_count
        }
        level {
            id
            level
        }

        questions(limit: $limit, offset: $offset, order: $order, filter: $filter) {
            id
            description
            answer
            status
            favorite_status
            gold
            ticket
            liked
            count_likes
            count_comments
            selections_array {
                Text
                Value
            }
            image {
                id
                path
                width
                height
            }
            video {
                id
                url
                height
                width
                path
                rotate
                duration
                cover
            }
            category {
                id
                name
            }
            explanation {
                id
                content
                video {
                    width
                    height
                    cover
                    url
                }
                images {
                    width
                    path
                }
            }
            type
            correct_count
            count
            wrong_count
            user {
                id
                name
                avatar
                followers_count
                question_count
                roles
                profile {
                    sub_name
                    birthday
                    age
                    introduction
                    posts_count
                }
                level {
                    id
                    level
                }
            }
            submit
            audits {
                id
                user {
                    id
                    name
                    avatar
                }
                status
            }
        }
    }
}

# 用户资产统计（精力点、智慧点、贡献统计、操作次数统计）
query UserMeansQuery($id: Int!) {
    user(id: $id) {
        id
        gold
        ticket
        level {
            id
            name
            ticket_max
            level
            exp
        }
        profile {
            total_contributes
        }
        today_contributes
        week_contributes
        today_new_questions_count
        today_left_questions_count
        today_withdraw_left
        exchange_rate
        is_admin
        force_alert
        is_bind_dongdezhuan
        dongdezhuanUser {
            id
            name
            account
        }
        dameiUser {
            id
            name
            account
        }
    }
}

# 用户答题状态（精力点、智慧点）
query UserMetaQuery($id: Int!) {
    user(id: $id) {
        id
        gold
        ticket
        exp
        next_level_exp
        exchange_rate
        level {
            id
            name
            ticket_max
            level
            exp
        }
    }
}

#用户提现信息
query UserWithdrawQuery($id: Int) {
    user(id: $id) {
        id
        gold
    }
}

#更改昵称
mutation updateUserNameMutation($name: String!) {
    updateUserName(name: $name) {
        id
        name
    }
}

#修改头像
mutation updateUserAvatarMutation($avatar: String!) {
    updateUserAvatar(avatar: $avatar) {
        id
        avatar
    }
}

#设置性别/介绍/生日
mutation setUserInfoMutation($data: UserInfo) {
    setUserInfo(data: $data) {
        id
        gender
        profile {
            birthday
            introduction
        }
    }
}

# 答题记录
query answerHistoriesQuery($offset: Int, $limit: Int) {
    user {
        id
        answerHistories(offset: $offset, limit: $limit) {
            id
            correct_count
            question {
                id
                description
            }
        }
    }
}

#我的收藏
query FavoritesQuery($offset: Int, $limit: Int) {
    favorites(offset: $offset, limit: $limit) {
        id
        created_at
        question {
            id
            description
            created_at
            image {
                id
                path
            }
            video {
                id
                url
                path
                cover
            }
            category {
                id
                name
            }
            count
        }
    }
}

#手机验证
mutation SendVerificationCodeMutation($account: String!, $action: VerificationActionEnum!) {
    sendVerificationCode(account: $account, action: $action) {
        id
        user {
            id
            name
        }
        code
        channel
        surplusSecond
    }
}

#关注
mutation FollowToggbleMutation($followed_type: FollowedEnumType!, $followed_id: Int!) {
    followToggle(followed_type: $followed_type, followed_id: $followed_id) {
        id
        follow_user {
            id
        }
        created_at
    }
}

#关注列表
query FollowsQuery($user_id: Int, $filter: FollowedEnumType, $offset: Int, $limit: Int) {
    follows(user_id: $user_id, filter: $filter, offset: $offset, limit: $limit) {
        id
        follow_user {
            id
            name
            avatar
            gender
            profile {
                birthday
                introduction
            }
            followed_user_status
            level {
                id
                level
            }
        }
    }
}

#粉丝
query FollowersQuery($user_id: Int, $filter: FollowedEnumType, $offset: Int, $limit: Int) {
    followers(user_id: $user_id, filter: $filter, offset: $offset, limit: $limit) {
        id
        user {
            id
            name
            avatar
            gender
            profile {
                birthday
                introduction
            }
            followed_user_status
            level {
                id
                level
            }
        }
    }
}

#兑换记录
query ExchangesQuery($limit: Int, $offset: Int) {
    exchanges(limit: $limit, offset: $offset) {
        id
        rmb
        exchange_rate
        gold
        created_at
        user {
            id
            name
        }
    }
}

#智慧点变动记录
query GoldsQuery($user_id: Int, $offset: Int, $limit: Int) {
    golds(user_id: $user_id, offset: $offset, limit: $limit) {
        gold
        balance
        remark
        created_at
    }
}

#修改账号
mutation UpdateUserAccountMutation($account: String) {
    updateUserAccount(account: $account) {
        id
        account
        name
    }
}

#贡献记录
query ContributesQuery($limit: Int, $offset: Int) {
    user {
        id
        contributes(limit: $limit, offset: $offset) {
            id
            time
            type
            reason
            amount
        }
    }
}

#邀请列表
query invitationUsersQuery($user_id: Int) {
    invitationUsers(user_id: $user_id) {
        id
        name
        avatar
        created_at
    }
}

#邀请信息
query userInvitationInfoQuery($user_id: Int) {
    user(id: $user_id) {
        id
        invitations_success_count
        invitations_rewarded
        invitation_reward_lines
        wallet {
            id
            total_withdraw_amount
        }
    }
}

#检查是否为新用户
query checkNewUserQuery($user_id: Int) {
    user(id: $user_id) {
        id
        has_reward_new_user
    }
}

#绑定微信
mutation BindWechatMutation($code: String!, $version: String) {
    bindWechat(code: $code, version: $version) {
        id
    }
}

#判断账号是否注册
query accountHasExisted($account: String!) {
    accountHasExisted(account: $account)
}

#判断账号来源
query IsInviteUser($account: String!) {
    isInviteUser(account: $account)
}

#判断是否为8/7-8/23注册的用户
mutation autoSignInMutation($account: String, $uuid: String) {
    autoSignIn(account: $account, uuid: $uuid) {
        id
        account
        token
        avatar
        name
        wallet {
            id
            real_name
            pay_account
            pay_info_change_count
            today_withdraw_amount
        }
        level {
            id
            name
            ticket_max
            level
            exp
        }
        next_level_exp
        profile {
            introduction
            birthday
            age
            total_contributes
        }
        gender
        is_admin
        verified_at
        auto_uuid_user
        auto_phone_user
    }
}

#为8/7-8/23注册的用户重新设置密码
mutation tokenSetPassword($password: String, $token: String) {
    tokenSetPassword(password: $password, token: $token) {
        id
        account
        token
        avatar
        name
        wallet {
            id
            real_name
            pay_account
            pay_info_change_count
            today_withdraw_amount
        }
        profile {
            introduction
            birthday
            age
            total_contributes
        }
        gender
        is_admin
    }
}

#自动注册
mutation autoSignUpMutation($account: String, $uuid: String) {
    autoSignUp(account: $account, uuid: $uuid) {
        id
        account
        token
        avatar
        name
        wallet {
            id
            real_name
            pay_account
            pay_info_change_count
            today_withdraw_amount
        }
        level {
            id
            name
            ticket_max
            level
            exp
        }
        next_level_exp
        profile {
            introduction
            birthday
            age
            total_contributes
        }
        gender
        is_admin
        verified_at
        auto_uuid_user
        auto_phone_user
    }
}

#uuid注册用户绑定账号密码
mutation UUIDBindMutation($account: String, $password: String!) {
    uuidBind(account: $account, password: $password) {
        id
        account
        token
        avatar
        name
        wallet {
            id
            real_name
            pay_account
            pay_info_change_count
            today_withdraw_amount
        }
        profile {
            introduction
            birthday
            age
            total_contributes
        }
        gender
        is_admin
        verified_at
    }
}

#静默注册用户信息查询
query UserAutoQuery($id: Int) {
    user(id: $id) {
        id
        auto_uuid_user
        auto_phone_user
        account
        name
        profile {
            introduction
            birthday
            age
            total_contributes
        }
        gender
        avatar
        gold
        ticket
        next_level_exp
        level {
            id
            name
            ticket_max
            level
            exp
        }
        wallet {
            id
            pay_account
            real_name
            pay_info_change_count
        }
        has_reward_new_user
        is_bind_wechat
        is_admin
        verified_at
    }
}

#用户累计收入排行榜 "TOTAL_WITHDRAW"
query userWithdrawRank {
    users(rank: TOTAL_WITHDRAW) {
        id
        name
        avatar
        transaction_sum_amount
    }
}

#用户答对题总数排行榜 "DOUBLE_HIT_ANSWER"
query userCorrectRank {
    users(rank: DOUBLE_HIT_ANSWER) {
        id
        name
        avatar
        correct_count
    }
}

#我的排名
query meRank($id: Int) {
    user(id: $id) {
        id
        avatar
        name
        rank
        transaction_sum_amount
        correct_count
    }
}

#检查用户是否能够发布视频
query checkUser($id: Int) {
    user(id: $id) {
        id
        share_spider_status
    }
}

#设置钱包信息`
mutation SetWalletInfoMutation($data: WalletInput) {
    setWalletInfo(data: $data) {
        real_name
    }
}

#我的勋章
query MedalsQuery($user_id: Int, $limit: Int, $offset: Int) {
    medals(user_id: $user_id, limit: $limit, offset: $offset) {
        id
        name_cn
        introduction
        done_icon_url
        undone_icon_url
        owned
    }
}

#修复头像
mutation FixUserAvatarMutation($user_id: Int!) {
    fixAvatar(user_id: $user_id) {
        id
    }
}

#错题记录
query WrongAnswersQuery($limit: Int) {
    wrongAnswers(limit: $limit) {
        answer
        question {
            id
            description
            wrong_count
            count
        }
    }
}
